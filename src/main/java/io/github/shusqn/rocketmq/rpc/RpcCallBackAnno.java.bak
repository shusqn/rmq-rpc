package com.rooollerslot.rocketmq.rpc;

import java.lang.reflect.Method;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.Signature;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.aspectj.lang.reflect.MethodSignature;
import org.springframework.stereotype.Component;

import lombok.extern.slf4j.Slf4j;

@Aspect
@Component
@Slf4j
public class RpcCallBackAnno {
	
    @Pointcut("@annotation(com.rooollerslot.rocketmq.rpc.RpcMqClient)")
    private void cut() {
    	log.info("dddd");
    }
    
    @Around("cut()")
    public Object around(ProceedingJoinPoint pjp) {
        Signature signature = pjp.getSignature();
        MethodSignature methodSignature = (MethodSignature) signature;
        Method method = methodSignature.getMethod();
        String methodName = method.getName();
        RpcMqClient rpcMqClient = method.getDeclaredAnnotation(RpcMqClient.class);
	
    	String targetServer = rpcMqClient.targetServer();
    	String reqMapping = methodName;
    	
    	log.info("callback {} : {}, {}",targetServer, reqMapping, pjp.getArgs().toString());
    	return RpcCallService.getInstance().callBack(reqMapping, targetServer, pjp.getArgs());
    	
    }
}

